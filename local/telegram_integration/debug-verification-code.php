<?php
// Debug espec√≠fico para c√≥digos de verificaci√≥n
require_once(__DIR__ . '/../../config.php');
require_once(__DIR__ . '/locallib.php');

echo "<h2>üîç Diagn√≥stico de C√≥digo de Verificaci√≥n</h2>";

// C√≥digo espec√≠fico a investigar
$test_code = '289181';

echo "<h3>1. B√∫squeda del C√≥digo: {$test_code}</h3>";

// Buscar el c√≥digo espec√≠fico
try {
    global $DB;
    
    // Buscar c√≥digo sin importar el estado
    $all_records = $DB->get_records('local_telegram_verification', 
        ['verification_code' => $test_code]);
    
    if (empty($all_records)) {
        echo "‚ùå <strong>PROBLEMA ENCONTRADO:</strong> El c√≥digo {$test_code} NO existe en la base de datos<br>";
        echo "üí° <strong>Soluci√≥n:</strong> El usuario necesita generar un nuevo c√≥digo<br><br>";
    } else {
        echo "‚úÖ C√≥digo encontrado en la base de datos<br>";
        
        foreach ($all_records as $record) {
            echo "<div style='border: 1px solid #ccc; padding: 10px; margin: 10px 0;'>";
            echo "<strong>Detalles del registro:</strong><br>";
            echo "‚Ä¢ ID: {$record->id}<br>";
            echo "‚Ä¢ Moodle User ID: {$record->moodle_userid}<br>";
            echo "‚Ä¢ C√≥digo: {$record->verification_code}<br>";
            echo "‚Ä¢ Verificado: " . ($record->is_verified ? '‚úÖ S√ç' : '‚ùå NO') . "<br>";
            echo "‚Ä¢ Creado: " . date('Y-m-d H:i:s', $record->created_at) . "<br>";
            echo "‚Ä¢ Expira: " . date('Y-m-d H:i:s', $record->expires_at) . "<br>";
            
            $now = time();
            if ($record->expires_at < $now) {
                $expired_minutes = round(($now - $record->expires_at) / 60);
                echo "‚Ä¢ <strong style='color: red;'>‚è∞ EXPIRADO hace {$expired_minutes} minutos</strong><br>";
            } else {
                $remaining_minutes = round(($record->expires_at - $now) / 60);
                echo "‚Ä¢ <strong style='color: green;'>‚è∞ V√°lido por {$remaining_minutes} minutos m√°s</strong><br>";
            }
            
            if ($record->is_verified) {
                echo "‚Ä¢ <strong style='color: orange;'>‚ö†Ô∏è YA VERIFICADO</strong> - No se puede usar de nuevo<br>";
                if (!empty($record->telegram_userid)) {
                    echo "‚Ä¢ Telegram User ID: {$record->telegram_userid}<br>";
                }
                if (!empty($record->telegram_username)) {
                    echo "‚Ä¢ Telegram Username: @{$record->telegram_username}<br>";
                }
            }
            echo "</div>";
        }
    }
    
} catch (Exception $e) {
    echo "‚ùå Error consultando la base de datos: " . $e->getMessage() . "<br>";
}

echo "<h3>2. Estado General de C√≥digos de Verificaci√≥n</h3>";

try {
    // Estad√≠sticas generales
    $total_codes = $DB->count_records('local_telegram_verification');
    $verified_codes = $DB->count_records('local_telegram_verification', ['is_verified' => 1]);
    $unverified_codes = $DB->count_records('local_telegram_verification', ['is_verified' => 0]);
    
    echo "üìä <strong>Estad√≠sticas:</strong><br>";
    echo "‚Ä¢ Total de c√≥digos: {$total_codes}<br>";
    echo "‚Ä¢ C√≥digos verificados: {$verified_codes}<br>";
    echo "‚Ä¢ C√≥digos pendientes: {$unverified_codes}<br><br>";
    
    // C√≥digos expirados
    $expired_codes = $DB->count_records_select('local_telegram_verification', 
        'expires_at < ? AND is_verified = 0', [time()]);
    echo "‚è∞ C√≥digos expirados sin verificar: {$expired_codes}<br><br>";
    
    // √öltimos c√≥digos generados
    echo "<strong>√öltimos 5 c√≥digos generados:</strong><br>";
    $recent_codes = $DB->get_records('local_telegram_verification', null, 
        'created_at DESC', '*', 0, 5);
    
    if (!empty($recent_codes)) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
        echo "<tr style='background: #f0f0f0;'><th>C√≥digo</th><th>Usuario</th><th>Estado</th><th>Creado</th><th>Expira</th></tr>";
        
        foreach ($recent_codes as $code) {
            $status = $code->is_verified ? '‚úÖ Verificado' : 
                     ($code->expires_at < time() ? '‚è∞ Expirado' : '‚è≥ Pendiente');
            $created = date('H:i:s', $code->created_at);
            $expires = date('H:i:s', $code->expires_at);
            
            echo "<tr>";
            echo "<td><strong>{$code->verification_code}</strong></td>";
            echo "<td>{$code->moodle_userid}</td>";
            echo "<td>{$status}</td>";
            echo "<td>{$created}</td>";
            echo "<td>{$expires}</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
} catch (Exception $e) {
    echo "‚ùå Error obteniendo estad√≠sticas: " . $e->getMessage() . "<br>";
}

echo "<h3>3. Recomendaciones</h3>";
echo "<div style='background: #e8f4fd; padding: 15px; border-left: 4px solid #2196f3;'>";
echo "<strong>üí° Para solucionar el problema:</strong><br><br>";
echo "1. <strong>Generar un nuevo c√≥digo:</strong> Ve a <a href='verify.php'>verify.php</a> y haz clic en 'Generar C√≥digo'<br>";
echo "2. <strong>Usar el c√≥digo inmediatamente:</strong> Los c√≥digos expiran en 15 minutos<br>";
echo "3. <strong>Verificar que el comando sea correcto:</strong> <code>/codigo_moodle TU_CODIGO_AQUI</code><br>";
echo "4. <strong>Asegurarse de usar el bot correcto:</strong> @OpoMelillaBot<br><br>";
echo "<strong>‚ö†Ô∏è Nota importante:</strong> Cada c√≥digo solo se puede usar una vez. Si ya fue verificado, necesitas generar uno nuevo.<br>";
echo "</div>";

echo "<h3>4. Test de Funci√≥n de Verificaci√≥n</h3>";

// Test de la funci√≥n de verificaci√≥n
echo "<strong>Probando funci√≥n local_telegram_integration_verify_code():</strong><br>";

$test_telegram_data = [
    'telegram_userid' => 'test_user_id',
    'username' => 'test_username'
];

$result = local_telegram_integration_verify_code($test_code, $test_telegram_data);
echo "Resultado: " . ($result ? '‚úÖ TRUE' : '‚ùå FALSE') . "<br>";
echo "<em>Nota: Este test no modifica datos reales, solo verifica la l√≥gica</em><br>";

?>