import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function truncarOpcionesLargas() {
  console.log('‚úÇÔ∏è TRUNCANDO OPCIONES LARGAS EN EXAMEN 2024...\n');
  
  try {
    // Soluciones espec√≠ficas para las preguntas problem√°ticas
    const solucionesPregunta8 = [
      "La resoluci√≥n corresponder√° a √≥rganos administrativos independientes.",
      "No cabr√° recurso ni podr√° impugnarse en el recurso contra la resoluci√≥n del procedimiento.",
      "No cabr√° recurso, aunque podr√° impugnarse en el recurso contra la resoluci√≥n del procedimiento.",
      "Cabr√° recurso, aunque no podr√° impugnarse en el recurso contra la resoluci√≥n del procedimiento."
    ];
    
    const solucionesPregunta9 = [
      "No alterar√° la competencia del √≥rgano delegante, pero para su validez ser√° necesaria su publicaci√≥n.",
      "No alterar√° la competencia del √≥rgano delegante y para su validez no ser√° necesaria su publicaci√≥n.",
      "Alterar√° la competencia del √≥rgano delegante y para su validez no ser√° necesaria su publicaci√≥n.",
      "Alterar√° la competencia del √≥rgano delegante, pero para su validez ser√° necesaria su publicaci√≥n."
    ];
    
    // Actualizar pregunta 8
    console.log('üîß Actualizando pregunta 8...');
    await (prisma as any).examenOficial2024.update({
      where: { questionNumber: 8 },
      data: {
        options: solucionesPregunta8
      }
    });
    console.log('‚úÖ Pregunta 8 actualizada');
    
    // Verificar longitudes para pregunta 8
    solucionesPregunta8.forEach((option, index) => {
      console.log(`   ${['A', 'B', 'C', 'D'][index]}) [${option.length} chars] "${option}"`);
    });
    
    console.log('');
    
    // Actualizar pregunta 9
    console.log('üîß Actualizando pregunta 9...');
    await (prisma as any).examenOficial2024.update({
      where: { questionNumber: 9 },
      data: {
        options: solucionesPregunta9
      }
    });
    console.log('‚úÖ Pregunta 9 actualizada');
    
    // Verificar longitudes para pregunta 9
    solucionesPregunta9.forEach((option, index) => {
      console.log(`   ${['A', 'B', 'C', 'D'][index]}) [${option.length} chars] "${option}"`);
    });
    
    console.log('\nüéâ OPCIONES TRUNCADAS EXITOSAMENTE');
    console.log('\nüß™ EJECUTAR VERIFICACI√ìN:');
    console.log('npx tsx scripts/verificar-opciones-largas-2024.ts');
    
  } catch (error) {
    console.error('‚ùå Error truncando opciones:', error);
  } finally {
    await prisma.$disconnect();
  }
}

truncarOpcionesLargas(); 