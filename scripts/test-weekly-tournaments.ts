// Script para probar el filtro de torneos por semana actual\n// Simula qué torneos mostraría el comando /torneos\n\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nasync function testWeeklyTournamentFilter() {\n  try {\n    console.log('🧪 TESTEANDO FILTRO SEMANAL DE TORNEOS');\n    console.log('=' .repeat(50));\n\n    // Obtener todos los torneos\n    const allTournaments = await prisma.tournament.findMany({\n      orderBy: { scheduledDate: 'asc' },\n      include: {\n        _count: {\n          select: { participants: true }\n        }\n      }\n    });\n\n    console.log(`📊 Total de torneos en la BD: ${allTournaments.length}`);\n\n    if (allTournaments.length === 0) {\n      console.log('❌ No hay torneos en la base de datos');\n      return;\n    }\n\n    // Calcular semana actual (mismo algoritmo que en el webhook)\n    const now = new Date();\n    const startOfWeek = new Date(now);\n    startOfWeek.setDate(now.getDate() - now.getDay()); // Inicio de la semana (domingo)\n    startOfWeek.setHours(0, 0, 0, 0);\n    \n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(startOfWeek.getDate() + 6); // Final de la semana (sábado)\n    endOfWeek.setHours(23, 59, 59, 999);\n\n    console.log(`\\n📅 SEMANA ACTUAL:`);\n    console.log(`   Inicio: ${startOfWeek.toLocaleString('es-ES')}`);\n    console.log(`   Final:  ${endOfWeek.toLocaleString('es-ES')}`);\n\n    // Filtrar torneos de esta semana\n    const tournamentsThisWeek = allTournaments.filter(tournament => {\n      const tournamentDate = new Date(tournament.scheduledDate);\n      return tournamentDate >= startOfWeek && tournamentDate <= endOfWeek;\n    });\n\n    console.log(`\\n🏆 TORNEOS DE ESTA SEMANA: ${tournamentsThisWeek.length}`);\n    \n    if (tournamentsThisWeek.length === 0) {\n      console.log('   ⚠️  No hay torneos programados para esta semana');\n    } else {\n      const scheduled = tournamentsThisWeek.filter(t => t.status === 'SCHEDULED');\n      const inProgress = tournamentsThisWeek.filter(t => t.status === 'IN_PROGRESS');\n      const completed = tournamentsThisWeek.filter(t => t.status === 'COMPLETED');\n\n      console.log(`   📋 Programados: ${scheduled.length}`);\n      console.log(`   🔥 En progreso: ${inProgress.length}`);\n      console.log(`   ✅ Completados: ${completed.length}`);\n\n      console.log(`\\n📝 DETALLE DE TORNEOS SEMANALES:`);\n      tournamentsThisWeek.forEach((tournament, index) => {\n        const date = new Date(tournament.scheduledDate);\n        const dayName = date.toLocaleDateString('es-ES', { weekday: 'long' });\n        const timeStr = date.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });\n        \n        console.log(`   ${index + 1}. ${tournament.name}`);\n        console.log(`      📅 ${dayName}, ${date.toLocaleDateString('es-ES')} a las ${timeStr}`);\n        console.log(`      📊 Estado: ${tournament.status}`);\n        console.log(`      👥 Participantes: ${tournament._count.participants}`);\n        console.log(``);\n      });\n    }\n\n    // Mostrar próxima semana para referencia\n    const nextWeekStart = new Date(endOfWeek);\n    nextWeekStart.setDate(endOfWeek.getDate() + 1);\n    nextWeekStart.setHours(0, 0, 0, 0);\n    \n    const nextWeekEnd = new Date(nextWeekStart);\n    nextWeekEnd.setDate(nextWeekStart.getDate() + 6);\n    nextWeekEnd.setHours(23, 59, 59, 999);\n\n    const nextWeekTournaments = allTournaments.filter(tournament => {\n      const tournamentDate = new Date(tournament.scheduledDate);\n      return tournamentDate >= nextWeekStart && tournamentDate <= nextWeekEnd;\n    });\n\n    console.log(`\\n🔮 PRÓXIMA SEMANA (${nextWeekStart.toLocaleDateString('es-ES')} - ${nextWeekEnd.toLocaleDateString('es-ES')}): ${nextWeekTournaments.length} torneos`);\n\n    // Mostrar algunos ejemplos de fechas para verificar\n    console.log(`\\n🔍 ANÁLISIS DE FECHAS (primeros 10 torneos):`);\n    allTournaments.slice(0, 10).forEach((tournament, index) => {\n      const date = new Date(tournament.scheduledDate);\n      const isThisWeek = date >= startOfWeek && date <= endOfWeek;\n      const dayName = date.toLocaleDateString('es-ES', { weekday: 'short' });\n      \n      console.log(`   ${index + 1}. ${tournament.name}`);\n      console.log(`      📅 ${dayName} ${date.toLocaleDateString('es-ES')} ${date.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' })}`);\n      console.log(`      ${isThisWeek ? '✅ ESTA SEMANA' : '❌ OTRA SEMANA'}`);\n      console.log(``);\n    });\n\n    console.log('\\n✅ Prueba completada');\n    console.log(`💡 El comando /torneos ahora mostrará solo ${tournamentsThisWeek.length} torneos en lugar de ${allTournaments.length}`);\n\n  } catch (error) {\n    console.error('❌ Error en test:', error);\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n\n// Ejecutar test\ntestWeeklyTournamentFilter(); 