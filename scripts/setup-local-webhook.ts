import { config } from 'dotenv';

// Cargar variables de entorno
config();

async function setupLocalWebhook() {
  try {
    console.log('üîß CONFIGURANDO WEBHOOK LOCAL PARA DESARROLLO');
    console.log('=' .repeat(60));
    
    const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    if (!BOT_TOKEN) {
      console.log('‚ùå TELEGRAM_BOT_TOKEN no encontrado en .env');
      return;
    }
    
    console.log('‚úÖ Token del bot encontrado');
    
    // Opci√≥n 1: Quitar webhook (modo polling para development)
    console.log('\\nüîÑ QUITANDO WEBHOOK EXISTENTE...');
    
    try {
      const deleteResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/deleteWebhook`);
      const deleteResult = await deleteResponse.json();
      
      if (deleteResult.ok) {
        console.log('   ‚úÖ Webhook eliminado exitosamente');
        console.log('   üìù Ahora el bot funcionar√° en modo polling (para desarrollo)');
      } else {
        console.log('   ‚ö†Ô∏è  Error eliminando webhook:', deleteResult.description);
      }
    } catch (error) {
      console.log('   ‚ùå Error en deleteWebhook:', error);
    }
    
    // Verificar estado actual
    console.log('\\nüìä VERIFICANDO ESTADO ACTUAL...');
    
    try {
      const infoResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
      const infoResult = await infoResponse.json();
      
      if (infoResult.ok) {
        console.log('   üìã Estado del webhook:', {
          url: infoResult.result.url || 'NINGUNA (modo polling)',
          pendingUpdates: infoResult.result.pending_update_count || 0,
          lastError: infoResult.result.last_error_message || 'Ninguno'
        });
      }
    } catch (error) {
      console.log('   ‚ùå Error verificando estado:', error);
    }
    
    // Informaci√≥n para el usuario
    console.log('\\nüéØ CONFIGURACI√ìN COMPLETADA');
    console.log('\\nüìã C√ìMO PROBAR AHORA:');
    console.log('   1. ‚úÖ Servidor Next.js ejecut√°ndose (localhost:3000)');
    console.log('   2. ‚úÖ Webhook eliminado (modo desarrollo)');
    console.log('   3. üß™ Prueba el comando /examen2018 en Telegram');
    console.log('');
    console.log('üí° NOTA: En desarrollo, Telegram enviar√° comandos directamente al bot');
    console.log('   sin usar webhook. Esto es normal y funcional.');
    console.log('');
    console.log('üîß SI NECESITAS WEBHOOK REAL:');
    console.log('   ‚Ä¢ Usa ngrok: npx ngrok http 3000');
    console.log('   ‚Ä¢ Configura webhook con: https://tu-ngrok-url.ngrok.io/api/telegram/webhook');
    
  } catch (error) {
    console.error('‚ùå ERROR CONFIGURANDO WEBHOOK:', error);
  }
}

setupLocalWebhook(); 