import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function createExamenOficial2024Table() {
  try {
    console.log('üèóÔ∏è CREANDO TABLA ExamenOficial2024');
    console.log('==================================');

    // El esquema de la tabla se debe agregar al schema.prisma primero
    // Esta funci√≥n verificar√° si la tabla existe y puede usarse

    // Verificar si la tabla existe intentando hacer una consulta simple
    try {
      const count = await prisma.examenOficial2024.count();
      console.log(`‚úÖ Tabla ExamenOficial2024 ya existe con ${count} registros`);
    } catch (error) {
      console.error('‚ùå La tabla ExamenOficial2024 no existe.');
      console.log('\nüìã NECESITAS AGREGAR AL SCHEMA.PRISMA:');
      console.log(`
model ExamenOficial2024 {
  id                    String   @id @default(cuid())
  createdAt            DateTime @default(now())
  questionNumber       Int      @unique
  question             String   @db.Text
  options              String[]
  correctAnswerIndex   Int
  category             String?
  difficulty           String?  @default("OFICIAL")
  isActive             Boolean  @default(true)
  sendCount            Int      @default(0)
  lastSuccessfulSendAt DateTime?

  // Relaciones con respuestas de simulacro
  simulacroResponses   SimulacroResponse[]

  @@map("ExamenOficial2024")
}
      `);
      console.log('\nüîß DESPU√âS EJECUTA: npx prisma db push');
      return;
    }

    console.log('üéØ La tabla est√° lista para usar');

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createExamenOficial2024Table().catch(console.error); 