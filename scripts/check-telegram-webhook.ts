import { config } from 'dotenv';

config();

async function checkTelegramWebhook() {
  try {
    console.log('üîç VERIFICANDO CONFIGURACI√ìN DEL WEBHOOK DE TELEGRAM');
    console.log('=' .repeat(60));

    const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    if (!BOT_TOKEN) {
      console.log('‚ùå ERROR: TELEGRAM_BOT_TOKEN no encontrado');
      return;
    }

    // 1. Verificar webhook actual
    console.log('\nüîó 1. VERIFICANDO WEBHOOK ACTUAL...');
    try {
      const webhookResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
      const webhookInfo = await webhookResponse.json() as any;
      
      console.log('üìä Estado del webhook:', webhookInfo);
      
      if (webhookInfo.ok && webhookInfo.result.url) {
        console.log('üåê Webhook configurado:', webhookInfo.result.url);
        console.log('üìÖ √öltima actualizaci√≥n:', webhookInfo.result.last_error_date ? 
          new Date(webhookInfo.result.last_error_date * 1000).toLocaleString() : 'N/A');
        
        if (webhookInfo.result.last_error_message) {
          console.log('‚ùå √öltimo error:', webhookInfo.result.last_error_message);
        }
      } else {
        console.log('‚ö†Ô∏è No hay webhook configurado o est√° en modo polling');
      }
    } catch (error) {
      console.log('‚ùå Error verificando webhook:', error);
    }

    // 2. Quitar webhook (cambiar a polling)
    console.log('\nüîÑ 2. ELIMINANDO WEBHOOK (CAMBIAR A MODO POLLING)...');
    try {
      const deleteResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/deleteWebhook`);
      const deleteResult = await deleteResponse.json() as any;
      
      if (deleteResult.ok) {
        console.log('‚úÖ Webhook eliminado exitosamente');
        console.log('üéØ Bot cambiado a modo POLLING');
      } else {
        console.log('‚ùå Error eliminando webhook:', deleteResult.description);
      }
    } catch (error) {
      console.log('‚ùå Error eliminando webhook:', error);
    }

    // 3. Verificar que no hay webhook
    console.log('\nüîç 3. VERIFICANDO QUE EL WEBHOOK FUE ELIMINADO...');
    try {
      const verifyResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
      const verifyInfo = await verifyResponse.json() as any;
      
      if (verifyInfo.ok && !verifyInfo.result.url) {
        console.log('‚úÖ Webhook eliminado correctamente');
        console.log('üéÆ Bot ahora est√° en modo POLLING');
      } else {
        console.log('‚ö†Ô∏è Webhook todav√≠a existe:', verifyInfo.result.url);
      }
    } catch (error) {
      console.log('‚ùå Error verificando eliminaci√≥n:', error);
    }

    // 4. Probar env√≠o de mensaje de prueba
    console.log('\nüß™ 4. PROBANDO COMUNICACI√ìN DIRECTA...');
    console.log('üí° Para probar el bot:');
    console.log('   1. Ve a @OpoMelillaBot en Telegram');
    console.log('   2. Env√≠a /start');
    console.log('   3. Env√≠a /examen2018');
    console.log('   4. El bot deber√≠a responder inmediatamente');
    
    console.log('\nüéØ MODO POLLING ACTIVADO');
    console.log('‚úÖ El bot ahora recibir√° mensajes directamente desde Telegram');
    console.log('üîÑ No necesitas servidor local ejecut√°ndose para probar');

  } catch (error) {
    console.error('‚ùå ERROR GENERAL:', error);
  }
}

checkTelegramWebhook(); 